---
# Changing the name of the Host machine to Master
- name: Changing the name of the Host machine to Master
  shell: hostnamectl set-hostname {{ hostname_master }}

# - name: Pulling images required for setting up a Kubernetes cluster
#   shell: kubeadm config images pull

- name: Resetting kubeadm
  shell: kubeadm reset -f
  register: kubeadm_reset_output

- name: Resetting Kubeadm status
  debug:
    msg: "{{ kubeadm_reset_output }}"

- name: Initializing Kubernetes Cluster
  shell: 
    cmd: kubeadm init --control-plane-endpoint "{{ ad_addr }}" --upload-certs
  register: K8s_Initialize_output
  ignore_errors: yes

- name: Kubernetes Cluster Initializing status
  debug:
    msg: "{{ K8s_Initialize_output }}"

- name: Copying required files
  shell: |
    mkdir -p $HOME/.kube
    sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

# - name: Switch cgroup Driver from Systemd to cgroupfs
#   shell: "sed -i 's/cgroupDriver: systemd/cgroupDriver: cgroupfs/g' /var/lib/kubelet/config.yaml"
#   register: Switch_Systemd_To_Cgroupfs

# - name: Switch cgroup Driver from Systemd to cgroupfs Status
#   debug:
#     msg: "{{ Switch_Systemd_To_Cgroupfs }}"

# - name: Reloading Systemd Driver 
#   systemd: 
#     daemon_reload: yes
#   register: SD_status

# - name: "Restarting Docker"
#   service: 
#     name: docker
#     state: restarted
#     enabled: yes
#   register: DSR_Status

# - name: Restarting Kubelet
#   service:
#     name: kubelet 
#     state: restarted
#     enabled: yes

# - name: Storing Logs and Generated token for future purpose.
#   local_action: copy content={{ KubeAdm_Output.stdout }} dest={{ k8s_token_file }}
#   become: False

- name: Adding Weave Network
  shell:
    cmd: kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')
  register: Weavenet_status

- name: Adding Weave Network Status
  debug:
    msg: "{{ Weavenet_status }}"

- name: Sleep for 15 seconds and continue with play
  pause: 
    seconds: 15

- name: "Control plane node isolation"
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-

- name: Show Running Pods
  shell:
    cmd: kubectl get pods --all-namespaces
  register: show_pods

- name: show pods
  debug:
    msg: "{{ show_pods }}"