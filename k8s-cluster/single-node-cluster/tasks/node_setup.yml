---

# - name: Install apt-transport-https
#   when: ansible_os_family == "Debian"
#   apt: 
#     name: apt-transport-https
#     state: present
#     update_cache: yes

# - name: Install python3-apt package
#   when: ansible_os_family == "Debian"
#   apt:
#     name: python3-apt
#     state: present
#   become: yes 

# - name: Add Docker APT GPG key
#   when: ansible_os_family == "Debian"
#   apt_key:
#     url: https://download.docker.com/linux/ubuntu/gpg

# - name: Update repositories cache
#   when: ansible_facts['os_family'] == "Debian"
#   apt: update_cache=yes

# - name: Install build-essential
#   when: ansible_facts['os_family'] == "Debian"
#   apt: name=build-essential state=present

# - name: Install the libselinux-python package
#   when: ansible_facts['os_family'] == "Debian"
#   apt: name=python-selinux state=present

- name: Enable Selinux in Permissive Mode.
  selinux:
    policy: targeted
    state: disabled
  # vars:
  #   ansible_python_interpreter: "{{ python3 }}"

- name: Disable Swap
  shell: swapoff -a

- name: Commenting Swap entries in /etc/fstab
  replace: 
    path: /etc/fstab
    regexp: '(^/.*swap*)'
    replace: '# \1'

- name: Letting iptables see bridged traffic
  copy:
    src: ./files/k8s.conf
    dest: /etc/sysctl.d/k8s.conf

- name: Load br_netfilter module 
  copy:
    src: ./files/br-k8s/k8s.conf 
    dest: /etc/modules-load.d/k8s.conf

- name: sysctl config
  shell: sysctl --system
  register: sysctl
- debug: var=sysctl.stdout_lines

- name: br_netfilter module is loaded
  shell: lsmod | grep br_netfilter
  register: br
- debug: var=br.stdout_lines

- name: Add Kubernetes Repo
  copy:
    src: ./files/kubernetes.repo
    dest: /etc/yum.repos.d/kubernetes.repo

- name: yum update
  yum:
    name: '*'
    state: latest
    exclude: kernel.*, kernel-*
